<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	
	<tx:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<view-controller path="/unauhorized" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean id="tilesViewResolver"
		class="org.springframework.web.servlet.view.tiles3.TilesViewResolver" />

	<!-- Tiles Configuration -->
	<beans:bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/**/views.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	<!-- Admin URL Intercepter -->
	<interceptors>
		<interceptor>
			<mapping path="/admin/**" />
			<beans:bean class="com.aki.app.core.interceptor.AdminUrlInterceptor" />
		</interceptor>
	</interceptors>
	<interceptors>
		<interceptor>
			<mapping path="/saleRep/**" />
			<beans:bean
				class="com.aki.app.core.interceptor.SalesRepresentativeUrlInterceptor" />
		</interceptor>
	</interceptors>
	<interceptors>
		<interceptor>
			<mapping path="/teamLeader/**" />
			<beans:bean class="com.aki.app.core.interceptor.TeamLeaderUrlInterceptor" />
		</interceptor>
	</interceptors>

	<!-- MultiPart Resolver -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- Setting maximum upload size -->
		<beans:property name="maxUploadSize" value="100000000" />

	</beans:bean>

	<!-- DataSource Bean -->
	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url"
			value="jdbc:mysql://localhost/aki_project" />
		<beans:property name="username" value="admin" />
		<beans:property name="password" value="admin" />
	</beans:bean>

	<beans:bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>com.aki.app.core.model.User</beans:value>
				<beans:value>com.aki.app.core.model.Role</beans:value>
			</beans:list>
		</beans:property>


		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect
				</beans:prop>
				<beans:prop key="hibernate.show_sql">false</beans:prop>
				<beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

	<!-- TransactionManager -->
	<tx:annotation-driven />
	<beans:bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="sessionFactory" />
	</beans:bean>

	<!-- Validators -->
	<!-- <beans:bean id="accountSettingValidator" class="com.aki.core.utils.validators.AccountSettingValidator"/> 
		<beans:bean id="forgotPasswordValidator" class="com.aki.core.utils.validators.ForgotPasswordValidator"/> 
		<beans:bean id="addResourceValidator" class="com.aki.core.utils.validators.AddResourceValidator"/> 
		<beans:bean id="stringToUserConveter" class="com.aki.core.support.converters.StringToUserConveter"/> -->
	<!-- <beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl"> 
		<beans:property name="javaMailProperties"> <beans:props> <beans:prop key="mail.smtp.auth">true</beans:prop> 
		<beans:prop key="mail.smtp.starttls.enable">true</beans:prop> <beans:prop 
		key="mail.smtp.host">smtp.gmail.com</beans:prop> <beans:prop key="mail.smtp.port">587</beans:prop> 
		</beans:props> </beans:property> <beans:property name="username" value="sachicool99@gmail.com" 
		/> <beans:property name="password" value="AppajiAmma" /> </beans:bean> <beans:bean 
		id="emailManager" class="com.aki.core.utils.emailManager.EmailManager"> <beans:property 
		name="mailSender" ref="mailSender"/> <beans:property name="simpleMailMessage" 
		ref="customMailMessage"/> </beans:bean> <beans:bean id="customMailMessage" 
		class="org.springframework.mail.SimpleMailMessage"> <beans:property name="from" 
		value="sachicool99@gmail.com"/> </beans:bean> <beans:bean id="velocityEngine" 
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean"> <beans:property 
		name="resourceLoaderPath" value="classpath:META-INF/velocityTemplates/" /> 
		</beans:bean> -->
	<context:component-scan base-package="com.aki.app" />
</beans:beans>
